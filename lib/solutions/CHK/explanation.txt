NOTE: I will denote time complexity as TC, and space complexity as SC
    Initial thoughts:
     - Given a string, we can use collections.Counter to build a hash map of count of every
       item in the basket TC = O(n) and SC = O(n)
     - For every key (product name) we can check for the price and whether there is a promo.

     Build a class of "Product" consisting of Product(sku:str, price:int)
     Build an additional class "Stock" that would store all of the stock as a list of "Product" classes

     - Very OOP
     - Items can be easily added to the stock
     - Item can be later reused as a model when DB will be used
     - Runtime for the current question, O(1) to find the product in stock
       if we make stock as a set